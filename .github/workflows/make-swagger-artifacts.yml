name: Make swagger artifacts

on:
  push:
    branches:
    - main
    paths:
    - 'schemas/swagger.yml'
    - 'schemas/Dockerfile'
  # pull_request:
  #   branches:
  #     - main
  #   types: [opened, synchronize]
  #   tags:
  #     - v*

jobs:
  build-image-and-client:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 30

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::607167088920:role/github-actions-dreamkast

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Build, tag, and push image to Amazon ECR
        id: ecr
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dreamkast-api-mock
          GITHUB_REF: ${{ github.ref }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          echo REF "$GITHUB_REF"
          echo HEAD REF "$GITHUB_HEAD_REF"
          echo SHA "$GITHUB_SHA"
          # shellcheck disable=SC2001
          IMAGE_TAG=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')
          # shellcheck disable=SC2001
          [[ "$GITHUB_REF" == "refs/tags/"* ]] && IMAGE_TAG=$(echo "$IMAGE_TAG" | sed -e 's/^v//')

          IMAGE_WITH_TAG="${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          IMAGE_WITH_SHA="${ECR_REGISTRY}/${ECR_REPOSITORY}:${GITHUB_SHA}"

          cd schemas/
          docker build -t "$IMAGE_WITH_TAG" .
          docker push "$IMAGE_WITH_TAG"

          docker tag "$IMAGE_WITH_TAG" "$IMAGE_WITH_SHA"
          docker push "$IMAGE_WITH_SHA"

          echo "IMAGE_WITH_TAG=${IMAGE_WITH_TAG}" >> "$GITHUB_OUTPUT"
          echo "IMAGE_WITH_SHA=${IMAGE_WITH_SHA}" >> "$GITHUB_OUTPUT"

      # TODO(kanata): deploy dreamkst-api-mock to ECS & automate to deploy it
      #
      #- name: Checkout dreamkast-infra
      #  uses: actions/checkout@v4
      #  with:
      #    repository: cloudnativedaysjp/dreamkast-infra
      #    path: dreamkast-infra
      #    token: ${{ steps.generate_token.outputs.token }}

      #- name: Setup Kustomize
      #  uses: imranismail/setup-kustomize@v2
      #  with:
      #    kustomize-version: "3.6.1"

      #- name: Update Kubernetes resources
      #  run: |
      #    cd dreamkast-infra/manifests/app/dreamkast-api-mock/base
      #    kustomize edit set image ${{ steps.ecr.outputs.IMAGE_WITH_SHA }}
      #    cat kustomization.yaml

      #- name: Commit files
      #  working-directory: dreamkast-infra/
      #  run: |
      #    git config --local user.email "action@github.com"
      #    git config --local user.name "GitHub Action"
      #    git status
      #    git add -A
      #    git commit -am "Bump docker tag"

      #- name: Push changes
      #  uses: ad-m/github-push-action@master
      #  with:
      #    github_token: ${{ steps.generate_token.outputs.token }}
      #    repository: cloudnativedaysjp/dreamkast-infra
      #    directory: dreamkast-infra
      #    branch: main

      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2.0.2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: cloudnativedaysjp
          repositories: dreamkast-ui
          permission-contents: write
          permission-pull-requests: write

      - name: Checkout dreamkast-ui
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          repository: cloudnativedaysjp/dreamkast-ui
          path: dreamkast-ui
          token: ${{ steps.generate_token.outputs.token }}

      - name: Copy swagger.yml
        run: |
          cp -f ./schemas/swagger.yml ./dreamkast-ui/schemas/swagger.yml

      - name: Generate RTKQuery Client
        run: |
          mkdir -p tmp && cd tmp
          yarn add ts-node @rtk-query/codegen-openapi
          npx @rtk-query/codegen-openapi ${{ github.workspace }}/dreamkast-ui/rtk-query-codegen-openapi.config.ts

      - name: Commit files
        working-directory: dreamkast-ui/
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git status
          git add -A
          git commit -am "Update RTK Query Client (generated by rtk-query/codegen-openapi)"

      - name: Push changes
        uses: ad-m/github-push-action@d91a481090679876dfc4178fef17f286781251df # v0.8.0
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          repository: cloudnativedaysjp/dreamkast-ui
          directory: dreamkast-ui
          branch: rtk-query/codegen-openapi

      - name: Create Pull Request
        uses: "actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea" # v7.0.1
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const pr = await github.rest.pulls.create({
              owner: "cloudnativedaysjp",
              repo: "dreamkast-ui",
              title: "Automated PR (dreamkast swagger.yml update)",
              body: "**This PR is automatically created**",
              head: "rtk-query/codegen-openapi",
              base: "main"
            });
