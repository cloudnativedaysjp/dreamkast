version: "3.8"
services:
  app:
    build: .
    entrypoint: /bin/sh -c "docker/wait-for-it.sh db:3306 --timeout=600 && ./entrypoint.sh"
    environment:
      RAILS_ENV: production
      NODE_ENV: production
      SENTRY_DSN: ${SENTRY_DSN}
      S3_REGION: ap-northeast-1
      S3_BUCKET: ${S3_BUCKET}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      MYSQL_HOST: db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: dreamkast
      REDIS_URL: redis://redis:6379
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    tty: true
    stdin_open: true
    volumes:
      - .:/app
      - /app/.git
      - /app/log
      - bundle:/app/vendor/bundle
      - node-modules:/app/node_modules
      - packs:/app/public/packs
      - vendor:/app/vendor
    tmpfs:
      - /app/tmp
    ports:
      - "3000:3000"
    depends_on:
      - db
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dreamkast
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
    - mysql-data:/var/lib/mysql
    ports:
    - "3306:3306"
  redis:
    image: "redis:6"
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
volumes:
  mysql-data:
  bundle:
  node-modules:
  packs:
  vendor:
  redis-data:
