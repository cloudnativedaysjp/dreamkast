openapi: "3.0.2"
info:
  title: Dreamkast API
  version: "1.0.0"
  description: "This is a API definition of the Dreamkast. You can find a documentation of this API at http://api-docs.dev.cloudnativedays.jp/."
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8080/
  - url: http://api-mock.dev.cloudnativedays.jp/
  - url: http://dreamkast-api-mock.udcp.info/
paths:
  /api/v1/{eventAbbr}/my_profile:
    get:
      tags:
        - Profile
      parameters:
        - name: eventAbbr
          in: path
          description: ID of event
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '403':
          description: You don't logged in
  /api/v1/events:
    get:
      tags:
        - Event
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '400':
          description: Invalid [eventAbbr] supplied
        '404':
          description: Event not found
  /api/v1/events/{eventAbbr}:
    get:
      tags:
        - Event
      parameters:
        - name: eventAbbr
          in: path
          description: ID of event
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid [eventAbbr] supplied
        '404':
          description: Event not found
  /api/v1/tracks:
    get:
      tags:
        - Track
      parameters:
        - name: eventAbbr
          in: query
          description: abbr of event (e.g. cndt2020)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Track'
        '400':
          description: Invalid [eventAbbr] supplied
        '404':
          description: Event not found

  /api/v1/tracks/{trackId}:
    get:
      tags:
        - Track
      parameters:
        - name: trackId
          in: path
          description: ID of track
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Invalid params supplied
        '404':
          description: Track not found
  /api/v1/streamings:
    get:
      parameters:
        - name: eventAbbr
          in: query
          description: abbr of event (e.g. cndt2020)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Streaming'
        '400':
          description: Invalid [eventAbbr] supplied
        '404':
          description: Event not found
  /api/v1/speakers:
    get:
      tags:
        - Speaker
      parameters:
        - name: eventAbbr
          in: query
          description: abbr of event (e.g. cndt2020)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Speaker'
        '400':
          description: Invalid [eventAbbr] supplied
        '404':
          description: Event not found
  /api/v1/proposals:
    get:
      tags:
        - Proposal
      parameters:
        - name: eventAbbr
          in: query
          description: abbr of event (e.g. cndt2020)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal'
        '400':
          description: Invalid [eventAbbr] supplied
        '404':
          description: Event not found
  /api/v1/talks:
    get:
      tags:
        - Talk
      parameters:
        - name: eventAbbr
          in: query
          description: abbr of event (e.g. cndt2020)
          required: true
          schema:
            type: string
        - name: trackId
          in: query
          description: ID of track
          required: false
          schema:
            type: string
        - name: conferenceDayIds
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Talk'
        '400':
          description: Invalid [eventAbbr] supplied
        '404':
          description: Event not found
  /api/v1/talks/{talkId}:
    get:
      tags:
        - Talk
      parameters:
        - name: talkId
          in: path
          description: ID of talk
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talk'
        '400':
          description: Invalid params supplied
        '404':
          description: Talk not found
    put:
      tags:
        - Talk
      parameters:
        - name: talkId
          in: path
          description: ID of talk
          required: true
          schema:
            type: string
      summary: Put Talk
      requestBody:
        description: Update on_air status
        content:
          application/json:
            schema:
              type: object
              properties:
                on_air:
                  type: boolean
  /api/v1/talks/{talkId}/video_registration:
    get:
      tags:
        - VideoRegistration
      parameters:
        - name: talkId
          in: path
          description: ID of talk
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoRegistration'
        '400':
          description: Invalid params supplied
        '401':
          description: Unauthorized
        '404':
          description: Talk not found
    put:
      tags:
        - VideoRegistration
      parameters:
        - name: talkId
          in: path
          description: ID of talk
          required: true
          schema:
            type: string
      summary: Put VideoRegistration
      requestBody:
        description: Update video_registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRegistration'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid params supplied
        '401':
          description: Unauthorized
        '404':
          description: Talk not found
  /api/v1/chat_messages:
    get:
      tags:
        - ChatMessage
      parameters:
        - name: eventAbbr
          in: query
          description: abbr of event (e.g. cndt2020)
          required: true
          schema:
            type: string
        - name: roomId
          in: query
          description: ID of chat room
          required: true
          schema:
            type: string
        - name: roomType
          in: query
          description: Type of chat room
          required: true
          schema:
            type: string
        - name: createdFrom
          in: query
          description: YYYY-MM-DDThh:mm:ss+TZD (use UTC)
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessage'
        '400':
          description: Invalid params supplied
        '404':
           description: ChatMessage not found
    post:
      tags:
        - ChatMessage
      summary: Post Chat Message
      requestBody:
        description: chat message to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessage'
      responses:
        '201':
          description: CREATED
  /api/v1/chat_messages/{messageId}:
    put:
      tags:
        - ChatMessage
      summary: Update Chat Message
      parameters:
        - name: messageId
          in: path
          description: ID of ChatMessage
          required: true
          schema:
            type: string
      requestBody:
        description: chat message to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChatMessage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatMessage'
        '403':
          description: Don't have permission to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Invalid params supplied
        '404':
           description: ChatMessage not found
  /api/v1/sponsors:
    get:
      tags:
        - Sponsor
      parameters:
        - name: eventAbbr
          in: query
          description: abbr of event (e.g. cndt2020)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sponsor'
        '400':
          description: Invalid params supplied
  /api/v1/booths/{boothId}:
    get:
      tags:
        - Booth
      parameters:
        - name: boothId
          in: path
          description: ID of booth
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booth'
        '400':
          description: Invalid params supplied
        '404':
          description: Booth not found

  # dreamkast function
  /api/v1/profile/{profileId}/points:
    get:
      tags:
        - Point
      parameters:
        - name: "conference"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "profileId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfilePoints"
    options:
      parameters:
        - name: "profileId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/v1/talks/{talkId}/vote:
    post:
      tags:
        - Vote
      parameters:
        - name: "talkId"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vote"
        required: true
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: "404 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    options:
      parameters:
        - name: "talkId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/v1/profile/{profileId}/point:
    post:
      tags:
        - Point
      parameters:
        - name: "profileId"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfilePoint"
        required: true
      responses:
        "404":
          description: "404 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    options:
      parameters:
        - name: "profileId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/v1/app-data/{profileId}/conference/{conference}:
    get:
      tags:
        - DkUiData
      parameters:
        - name: "profileId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conference"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DkUiData"
    post:
      tags:
        - DkUiData
      parameters:
        - name: "profileId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conference"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DkUiDataMutation"
        required: true
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    options:
      parameters:
        - name: "profileId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "conference"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/v1/tracks/{trackId}/viewer_count:
    get:
      tags:
        - ViewerCount
      parameters:
        - name: "trackId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: "404 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewerCount"
    options:
      parameters:
        - name: "trackId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}

components:
  schemas:
    Profile:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        isAttendOffline:
          type: boolean
        registeredTalks:
          type: array
          items:
            $ref: '#/components/schemas/RegisteredTalk'
      required:
        - id
        - name
        - email
        - isAttendOffline
    RegisteredTalk:
      type: object
      properties:
        talkId:
          type: number
        talkTitle:
          type: string
        talkSpeakers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              twitterId:
                type: string
        talkStartTime:
          type: string
          format: date-time
        talkEndTime:
          type: string
          format: date-time
        trackName:
          type: string
        roomName:
          type: string
        conferenceDay:
          type: string
          format: date
    Event:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        name:
          type: string
        abbr:
          type: string
        status:
          type: string
        rehearsalMode:
          type: boolean
        theme:
          type: string
        about:
          type: string
        privacy_policy:
          type: string
        privacy_policy_for_speaker:
          type: string
        copyright:
          type: string
        coc:
          type: string
        conferenceDays:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              date:
                type: string
              internal:
                type: boolean
      example:
        id: 2
        name: "CloudNative Days Spring 2020 ONLINE"
        abbr: "cndo2021"
        status: "closed"
        theme: "ともに踏み出すCloudNative祭"
        about: "『クラウドネイティブ』って何だっけ？ 私たち自身ずっと考えてきました。"
        privacy_policy: "プライバシーポリシーだよ"
        privacy_policy_for_speaker: "登壇者向けのポリシーだよ"
        copyright: "CloudNative Days Committee"
        coc: "CoCだよ"
      required:
        - id
        - name
        - abbr
        - status
        - theme
        - about
        - privacy_policy
        - privacy_policy_for_speaker
        - copyright
        - coc
    Track:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        name:
          type: string
        videoPlatform:
          type: string
          nullable: true
        videoId:
          type: string
          nullable: true
        channelArn:
          type: string
          nullable: true
        onAirTalk:
          type: object
          nullable: true
      example:
        id: 2
        name: "Track 2"
        videoPlatform: "vimeo"
        videoId: "453935827"
        channelArn: "arn:aws:ivs:us-east-1:607167088920:channel/KdizL0w0PD7i"
      required:
        - id
        - name
    Streaming:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        status:
          type: string
        trackId:
          type: number
        destinationUrl:
          type: string
        playbackUrl:
          type: string
        mediaLiveChannelStatus:
          type: string
    Speaker:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        name:
          type: string
        company:
          type: string
          nullable: true
        jobTitle:
          type: string
        profile:
          type: string
        githubId:
          type: string
          nullable: true
        twitterId:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
      example:
        - id: 1
          name: "めちゃすごい人"
          company: "Hoge Inc."
          jobTitle: "Super Engineer"
          profile: "This is profile"
          githubId: "3aae1aa4-563b-4a8a-9116-7ef1f2b1b08c"
          twitterId: "4639289c-b3fe-4049-8f25-58c2899c1286"
          avatarUrl: "https://avatars.githubusercontent.com/u/107187?v=4" # r_takaishi's avatar of GitHub
        - id: 2
          name: "やんごとない人"
          company: "Foo Inc."
          jobTitle: "Great Engineer"
          profile: "プロフィール"
          githubId: "b677b66a-917e-4acb-b6ac-b7a09511e103"
          twitterId: "87b72a9a-257f-4680-ab72-5edb4348124e"
          avatarUrl: "https://avatars.githubusercontent.com/u/44778132?s=200&v=4" # cloudnativedaysjp's avatar of GitHub
      required:
        - id
        - name
    Talk:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        conferenceId:
          type: number
        trackId:
          type: number
        videoPlatform:
          type: string
        videoId:
          type: string
        title:
          type: string
        abstract:
          type: string
        speakers:
          description: array of speakers name
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              name:
                type: string
        dayId:
          type: number
          nullable: true
        showOnTimetable:
          type: boolean
        startTime:
          type: string
        endTime:
          type: string
        talkDuration:
          type: number
        talkDifficulty:
          type: string
        talkCategory:
          type: string
        onAir:
          type: boolean
        documentUrl:
          type: string
        conferenceDayId:
          type: number
          nullable: true
        conferenceDayDate:
          type: string
          format: date
          nullable: true
        startOffset:
          type: number
        endOffset:
          type: number
        actualStartTime:
          type: string
        actualEndTime:
          type: string
        presentationMethod:
          type: string
          nullable: true
        slotNum:
          type: number
        allowShowingVideo:
          type: boolean
      example:
        - id: 1
          trackId: 2
          videoPlatform: "vimeo"
          videoId: "453935827"
          title: "やんごとなき発表"
          abstract: "やんごとなき発表をします"
          speakers: "やんごとない人"
          dayId: 1
          showOnTimetable: true
          startTime: "Sat, 23 Jan 2021 09:00:00 GMT"
          endTime: "Sat, 23 Jan 2021 09:20:00 GMT"
          talkDuration: 40
          talkDifficulty: "moderate"
          talkCategory: "CI/CD"
          onAir: true
          documentUrl: "http://documents"
          conferenceDayId: 1
          conferenceDayDate: "2021-01-23"
          startOffset: 0
          endOffset: 0
          actualStartTime: "Sat, 23 Jan 2021 09:00:00 GMT"
          actualEndTime: "Sat, 23 Jan 2021 09:20:00 GMT"
          presentationMethod: '現地登壇'
          slotNum: 1
          allowShowingVideo: true
        - id: 2
          trackId: 2
          videoPlatform: "vimeo"
          videoId: "453935827"
          title: "めちゃすごい発表"
          abstract: "めちゃすごい発表をします"
          speakers: "めちゃすごい人"
          dayId: 1
          showOnTimetable: true
          startTime: "Sat, 23 Jan 2021 09:00:00 GMT"
          endTime: "Sat, 23 Jan 2021 09:20:00 GMT"
          talkDuration: 40
          talkDifficulty: "moderate"
          talkCategory: "CI/CD"
          onAir: true
          documentUrl: "http://documents"
          conferenceDayId: 1
          conferenceDayDate: "2021-01-23"
          startOffset: 0
          endOffset: 0
          actualStartTime: "Sat, 23 Jan 2021 09:00:00 GMT"
          actualEndTime: "Sat, 23 Jan 2021 09:20:00 GMT"
          presentationMethod: 'オンライン登壇'
          slotNum: 1
          allowShowingVideo: false
      required:
        - id
        - trackId
        - videoId
        - title
        - abstract
        - speakers
        - dayId
        - showOnTimetable
        - startTime
        - endTime
        - talkDuration
        - talkDifficulty
        - talkCategory
    Proposal:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        status:
          type: string
        conferenceId:
          type: number
        talkId:
          type: number
        title:
          type: string
        abstract:
          type: string
        speakers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              id:
                type: number
        params:
          type: object
      required:
        - id
        - status
        - conferenceId
        - talkId
      example:
        - id: 1
          status: "accepted"
          conferenceId: 1
          talkId: 1
        - id: 2
          status: "rejected"
          conferenceId: 1
          talkId: 2
        - id: 3
          status: "registered"
          conferenceId: 1
          talkId: 3
    ChatMessage:
      type: object
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ChatMessageProperties'
      required:
        - [eventAbbr]
        - roomId
        - body
        - messageType
      example:
        id: 2
        body: "foo bar"
        createdAt: "2021-01-30T10:06:33.938Z"
    UpdateChatMessage:
      type: object
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ChatMessageProperties'
      required:
        - [eventAbbr]
        - body
    ChatMessageProperties:
      type: object
      properties:
        id:
          type: number
        profileId:
          type: number
        speakerId:
          type: number
          nullable: true
        eventAbbr:
          type: string
        roomId:
          type: number
        roomType:
          type: string
        body:
          type: string
        createdAt:
          type: string
        messageType:
          type: string
          enum: [chat, qa]
        replyTo:
          type: number
          nullable: true
    Sponsor:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        eventAbbr:
          type: string
        name:
          type: string
        abbr:
          type: string
        url:
          type: string
        logo_url:
          type: string
        sponsorType:
          type: array
          items:
            type: string
        booth:
          type: object
          properties:
            id:
              type: number
            opened:
              type: boolean
      example:
        - id: 1
          conference_id: 2
          name: スポンサー1株式会社
          abbr: sponsor1
          url: https://example.com/
          logo_url: cndo2021/trademark.png
        - id: 2
          conference_id: 2
          name: スポンサー2株式会社
          abbr: sponsor2
          url: https://example.com/
          logo_url: dummy.png
      required:
        - id
        - eventAbbr
        - name
        - abbr
        - url
        - logo_url
    Booth:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        sponsorId:
          type: number
        sponsorName:
          type: string
        published:
          type: boolean
        description:
          type: string
        url:
          type: string
        abbr:
          type: string
        text:
          type: string
        logoUrl:
          type: string
        vimeoUrl:
          type: string
        miroUrl:
          type: string
        pdfUrls:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              title:
                type: string
        keyImageUrls:
          type: array
          items:
            type: string
      required:
        - id
        - sponsorId
        - sponsorName
        - published
        - description
        - abbr
        - text
        - logoUrl
        - vimeoUrl
        - miroUrl
        - pdfUrls
        - keyImageUrls
    VideoRegistration:
      type: object
      additionalProperties: false
      properties:
        url:
          type: string
        status:
          type: string
          enum: [unsubmitted, submitted, confirmed, invalid_format]
        statistics:
          type: object
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - status
      example:
        status: "confirmed"
        url: "https://uploader.cloudnativedays.jp/hoge"
        statistics: {
            "file_name": "XX",
            "resolution_status": "OK",
            "resolution_type": "FHD",
            "aspect_status": "OK",
            "aspect_ratio": "16:9",
            "duration_status": "OK",
            "duration_description": "Appropriate media duration.",
            "size_status": "OK",
            "size_description": "Appropriate media size."
        }
        createdAt: "2022-04-30T10:06:33.938Z"
        updatedAt: "2022-05-30T22:02:11.123Z"

    # dreamkast-function
    Vote:
      title: "voteResponse"
      required:
        - "eventAbbr"
      type: "object"
      properties:
        eventAbbr:
          type: "string"
      additionalProperties: false
    Error:
      title: "Error Schema"
      type: "object"
      properties:
        message:
          type: "string"
    DkUiData:
      title: "dkUiData"
      required:
        - "stampChallenges"
        - "watchedTalksOnline"
      type: "object"
      properties:
        watchedTalksOnline:
          type: "object"
          properties:
            watchingTime:
              type: "object"
              additionalProperties: true
            prevTimestamp:
              type: "number"
        stampChallenges:
          type: "array"
          items:
            required:
              - "slotId"
              - "waiting"
            type: "object"
            properties:
              condition:
                type: "string"
              waiting:
                type: "boolean"
              slotId:
                type: "number"
              timestamp:
                type: "number"
      additionalProperties: true
    DkUiDataMutation:
      title: "dkUiDataMutation"
      required:
        - "action"
        - "payload"
      type: "object"
      properties:
        payload:
          type: "object"
          additionalProperties: true
        action:
          type: "string"
      additionalProperties: false
    CommonResponse:
      title: "commonResponse"
      type: "object"
      properties:
        message:
          type: "string"
        status:
          type: "string"
      additionalProperties: true
    ViewerCount:
      title: "viewerCountResponse"
      required:
        - "trackId"
        - "viewerCount"
      type: "object"
      properties:
        trackId:
          type: "number"
        viewerCount:
          type: "number"
      additionalProperties: false
    ProfilePoints:
      title: "profilePointsResponse"
      required:
        - "points"
        - "total"
      type: "object"
      properties:
        total:
          type: "number"
        points:
          type: "array"
          items:
            title: "profilePointResponse"
            required:
              - "conference"
              - "pointEventId"
            type: "object"
            properties:
              conference:
                type: "string"
              pointEventId:
                type: "string"
              point:
                type: "number"
              timestamp:
                type: "number"
              desc:
                type: "string"
            additionalProperties: false
      additionalProperties: false
    ProfilePoint:
      title: "profilePointRequest"
      required:
        - "conference"
        - "pointEventId"
      type: "object"
      properties:
        conference:
          type: "string"
        pointEventId:
          type: "string"
      additionalProperties: false
