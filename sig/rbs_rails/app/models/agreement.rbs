class Agreement < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Agreement, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def profile_id: () -> Integer?

    def profile_id=: (Integer?) -> Integer?

    def profile_id?: () -> bool

    def profile_id_changed?: () -> bool

    def profile_id_change: () -> [ Integer?, Integer? ]

    def profile_id_will_change!: () -> void

    def profile_id_was: () -> Integer?

    def profile_id_previously_changed?: () -> bool

    def profile_id_previous_change: () -> Array[Integer?]?

    def profile_id_previously_was: () -> Integer?

    def profile_id_before_last_save: () -> Integer?

    def profile_id_change_to_be_saved: () -> Array[Integer?]?

    def profile_id_in_database: () -> Integer?

    def saved_change_to_profile_id: () -> Array[Integer?]?

    def saved_change_to_profile_id?: () -> bool

    def will_save_change_to_profile_id?: () -> bool

    def restore_profile_id!: () -> void

    def clear_profile_id_change: () -> void

    def form_item_id: () -> Integer?

    def form_item_id=: (Integer?) -> Integer?

    def form_item_id?: () -> bool

    def form_item_id_changed?: () -> bool

    def form_item_id_change: () -> [ Integer?, Integer? ]

    def form_item_id_will_change!: () -> void

    def form_item_id_was: () -> Integer?

    def form_item_id_previously_changed?: () -> bool

    def form_item_id_previous_change: () -> Array[Integer?]?

    def form_item_id_previously_was: () -> Integer?

    def form_item_id_before_last_save: () -> Integer?

    def form_item_id_change_to_be_saved: () -> Array[Integer?]?

    def form_item_id_in_database: () -> Integer?

    def saved_change_to_form_item_id: () -> Array[Integer?]?

    def saved_change_to_form_item_id?: () -> bool

    def will_save_change_to_form_item_id?: () -> bool

    def restore_form_item_id!: () -> void

    def clear_form_item_id_change: () -> void

    def value: () -> Integer?

    def value=: (Integer?) -> Integer?

    def value?: () -> bool

    def value_changed?: () -> bool

    def value_change: () -> [ Integer?, Integer? ]

    def value_will_change!: () -> void

    def value_was: () -> Integer?

    def value_previously_changed?: () -> bool

    def value_previous_change: () -> Array[Integer?]?

    def value_previously_was: () -> Integer?

    def value_before_last_save: () -> Integer?

    def value_change_to_be_saved: () -> Array[Integer?]?

    def value_in_database: () -> Integer?

    def saved_change_to_value: () -> Array[Integer?]?

    def saved_change_to_value?: () -> bool

    def will_save_change_to_value?: () -> bool

    def restore_value!: () -> void

    def clear_value_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def profile: () -> Profile
  def profile=: (Profile?) -> Profile?
  def reload_profile: () -> Profile?
  def build_profile: (untyped) -> Profile
  def create_profile: (untyped) -> Profile
  def create_profile!: (untyped) -> Profile
  def form_item: () -> FormItem
  def form_item=: (FormItem?) -> FormItem?
  def reload_form_item: () -> FormItem?
  def build_form_item: (untyped) -> FormItem
  def create_form_item: (untyped) -> FormItem
  def create_form_item!: (untyped) -> FormItem
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Agreement, Integer]
    include Enumerable[Agreement]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Agreement, Integer]
  end
end
