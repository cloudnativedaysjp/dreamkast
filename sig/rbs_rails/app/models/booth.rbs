class Booth < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Booth, ActiveRecord_Relation, Integer]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def id_before_last_save: () -> Integer?
  def id_change_to_be_saved: () -> Array[Integer?]?
  def id_in_database: () -> Integer?
  def saved_change_to_id: () -> Array[Integer?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor conference_id(): Integer
  def conference_id_changed?: () -> bool
  def conference_id_change: () -> [ Integer?, Integer? ]
  def conference_id_will_change!: () -> void
  def conference_id_was: () -> Integer?
  def conference_id_previously_changed?: () -> bool
  def conference_id_previous_change: () -> Array[Integer?]?
  def conference_id_previously_was: () -> Integer?
  def conference_id_before_last_save: () -> Integer?
  def conference_id_change_to_be_saved: () -> Array[Integer?]?
  def conference_id_in_database: () -> Integer?
  def saved_change_to_conference_id: () -> Array[Integer?]?
  def saved_change_to_conference_id?: () -> bool
  def will_save_change_to_conference_id?: () -> bool
  def restore_conference_id!: () -> void
  def clear_conference_id_change: () -> void

  attr_accessor sponsor_id(): Integer
  def sponsor_id_changed?: () -> bool
  def sponsor_id_change: () -> [ Integer?, Integer? ]
  def sponsor_id_will_change!: () -> void
  def sponsor_id_was: () -> Integer?
  def sponsor_id_previously_changed?: () -> bool
  def sponsor_id_previous_change: () -> Array[Integer?]?
  def sponsor_id_previously_was: () -> Integer?
  def sponsor_id_before_last_save: () -> Integer?
  def sponsor_id_change_to_be_saved: () -> Array[Integer?]?
  def sponsor_id_in_database: () -> Integer?
  def saved_change_to_sponsor_id: () -> Array[Integer?]?
  def saved_change_to_sponsor_id?: () -> bool
  def will_save_change_to_sponsor_id?: () -> bool
  def restore_sponsor_id!: () -> void
  def clear_sponsor_id_change: () -> void

  attr_accessor published(): bool?
  def published_changed?: () -> bool
  def published_change: () -> [ bool?, bool? ]
  def published_will_change!: () -> void
  def published_was: () -> bool?
  def published_previously_changed?: () -> bool
  def published_previous_change: () -> Array[bool?]?
  def published_previously_was: () -> bool?
  def published_before_last_save: () -> bool?
  def published_change_to_be_saved: () -> Array[bool?]?
  def published_in_database: () -> bool?
  def saved_change_to_published: () -> Array[bool?]?
  def saved_change_to_published?: () -> bool
  def will_save_change_to_published?: () -> bool
  def restore_published!: () -> void
  def clear_published_change: () -> void
  attr_accessor published?(): bool

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  def conference: () -> Conference
  def conference=: (Conference?) -> Conference?
  def reload_conference: () -> Conference?
  def build_conference: (untyped) -> Conference
  def create_conference: (untyped) -> Conference
  def create_conference!: (untyped) -> Conference
  def sponsor: () -> Sponsor
  def sponsor=: (Sponsor?) -> Sponsor?
  def reload_sponsor: () -> Sponsor?
  def build_sponsor: (untyped) -> Sponsor
  def create_sponsor: (untyped) -> Sponsor
  def create_sponsor!: (untyped) -> Sponsor

  def self.published: () -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def published: () -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Booth, Integer]
    include Enumerable[Booth]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Booth, Integer]
  end
end
