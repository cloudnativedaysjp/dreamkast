class MediaPackageHarvestJob < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[MediaPackageHarvestJob, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def conference_id: () -> Integer

    def conference_id=: (Integer) -> Integer

    def conference_id?: () -> bool

    def conference_id_changed?: () -> bool

    def conference_id_change: () -> [ Integer?, Integer? ]

    def conference_id_will_change!: () -> void

    def conference_id_was: () -> Integer?

    def conference_id_previously_changed?: () -> bool

    def conference_id_previous_change: () -> Array[Integer?]?

    def conference_id_previously_was: () -> Integer?

    def conference_id_before_last_save: () -> Integer?

    def conference_id_change_to_be_saved: () -> Array[Integer?]?

    def conference_id_in_database: () -> Integer?

    def saved_change_to_conference_id: () -> Array[Integer?]?

    def saved_change_to_conference_id?: () -> bool

    def will_save_change_to_conference_id?: () -> bool

    def restore_conference_id!: () -> void

    def clear_conference_id_change: () -> void

    def media_package_channel_id: () -> Integer

    def media_package_channel_id=: (Integer) -> Integer

    def media_package_channel_id?: () -> bool

    def media_package_channel_id_changed?: () -> bool

    def media_package_channel_id_change: () -> [ Integer?, Integer? ]

    def media_package_channel_id_will_change!: () -> void

    def media_package_channel_id_was: () -> Integer?

    def media_package_channel_id_previously_changed?: () -> bool

    def media_package_channel_id_previous_change: () -> Array[Integer?]?

    def media_package_channel_id_previously_was: () -> Integer?

    def media_package_channel_id_before_last_save: () -> Integer?

    def media_package_channel_id_change_to_be_saved: () -> Array[Integer?]?

    def media_package_channel_id_in_database: () -> Integer?

    def saved_change_to_media_package_channel_id: () -> Array[Integer?]?

    def saved_change_to_media_package_channel_id?: () -> bool

    def will_save_change_to_media_package_channel_id?: () -> bool

    def restore_media_package_channel_id!: () -> void

    def clear_media_package_channel_id_change: () -> void

    def talk_id: () -> Integer

    def talk_id=: (Integer) -> Integer

    def talk_id?: () -> bool

    def talk_id_changed?: () -> bool

    def talk_id_change: () -> [ Integer?, Integer? ]

    def talk_id_will_change!: () -> void

    def talk_id_was: () -> Integer?

    def talk_id_previously_changed?: () -> bool

    def talk_id_previous_change: () -> Array[Integer?]?

    def talk_id_previously_was: () -> Integer?

    def talk_id_before_last_save: () -> Integer?

    def talk_id_change_to_be_saved: () -> Array[Integer?]?

    def talk_id_in_database: () -> Integer?

    def saved_change_to_talk_id: () -> Array[Integer?]?

    def saved_change_to_talk_id?: () -> bool

    def will_save_change_to_talk_id?: () -> bool

    def restore_talk_id!: () -> void

    def clear_talk_id_change: () -> void

    def job_id: () -> String?

    def job_id=: (String?) -> String?

    def job_id?: () -> bool

    def job_id_changed?: () -> bool

    def job_id_change: () -> [ String?, String? ]

    def job_id_will_change!: () -> void

    def job_id_was: () -> String?

    def job_id_previously_changed?: () -> bool

    def job_id_previous_change: () -> Array[String?]?

    def job_id_previously_was: () -> String?

    def job_id_before_last_save: () -> String?

    def job_id_change_to_be_saved: () -> Array[String?]?

    def job_id_in_database: () -> String?

    def saved_change_to_job_id: () -> Array[String?]?

    def saved_change_to_job_id?: () -> bool

    def will_save_change_to_job_id?: () -> bool

    def restore_job_id!: () -> void

    def clear_job_id_change: () -> void

    def status: () -> String?

    def status=: (String?) -> String?

    def status?: () -> bool

    def status_changed?: () -> bool

    def status_change: () -> [ String?, String? ]

    def status_will_change!: () -> void

    def status_was: () -> String?

    def status_previously_changed?: () -> bool

    def status_previous_change: () -> Array[String?]?

    def status_previously_was: () -> String?

    def status_before_last_save: () -> String?

    def status_change_to_be_saved: () -> Array[String?]?

    def status_in_database: () -> String?

    def saved_change_to_status: () -> Array[String?]?

    def saved_change_to_status?: () -> bool

    def will_save_change_to_status?: () -> bool

    def restore_status!: () -> void

    def clear_status_change: () -> void

    def start_time: () -> ActiveSupport::TimeWithZone?

    def start_time=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def start_time?: () -> bool

    def start_time_changed?: () -> bool

    def start_time_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def start_time_will_change!: () -> void

    def start_time_was: () -> ActiveSupport::TimeWithZone?

    def start_time_previously_changed?: () -> bool

    def start_time_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def start_time_previously_was: () -> ActiveSupport::TimeWithZone?

    def start_time_before_last_save: () -> ActiveSupport::TimeWithZone?

    def start_time_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def start_time_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_start_time: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_start_time?: () -> bool

    def will_save_change_to_start_time?: () -> bool

    def restore_start_time!: () -> void

    def clear_start_time_change: () -> void

    def end_time: () -> ActiveSupport::TimeWithZone?

    def end_time=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def end_time?: () -> bool

    def end_time_changed?: () -> bool

    def end_time_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def end_time_will_change!: () -> void

    def end_time_was: () -> ActiveSupport::TimeWithZone?

    def end_time_previously_changed?: () -> bool

    def end_time_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def end_time_previously_was: () -> ActiveSupport::TimeWithZone?

    def end_time_before_last_save: () -> ActiveSupport::TimeWithZone?

    def end_time_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def end_time_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_end_time: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_end_time?: () -> bool

    def will_save_change_to_end_time?: () -> bool

    def restore_end_time!: () -> void

    def clear_end_time_change: () -> void
  end
  include GeneratedAttributeMethods

  def conference: () -> Conference
  def conference=: (Conference?) -> Conference?
  def reload_conference: () -> Conference?
  def build_conference: (untyped) -> Conference
  def create_conference: (untyped) -> Conference
  def create_conference!: (untyped) -> Conference
  def media_package_channel: () -> MediaPackageChannel
  def media_package_channel=: (MediaPackageChannel?) -> MediaPackageChannel?
  def reload_media_package_channel: () -> MediaPackageChannel?
  def build_media_package_channel: (untyped) -> MediaPackageChannel
  def create_media_package_channel: (untyped) -> MediaPackageChannel
  def create_media_package_channel!: (untyped) -> MediaPackageChannel
  def talk: () -> Talk
  def talk=: (Talk?) -> Talk?
  def reload_talk: () -> Talk?
  def build_talk: (untyped) -> Talk
  def create_talk: (untyped) -> Talk
  def create_talk!: (untyped) -> Talk
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[MediaPackageHarvestJob, Integer]
    include Enumerable[MediaPackageHarvestJob]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[MediaPackageHarvestJob, Integer]
  end
end
