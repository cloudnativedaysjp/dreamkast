class SponsorAttachmentKeyImage < SponsorAttachment
  extend _ActiveRecord_Relation_ClassMethods[SponsorAttachmentKeyImage, ActiveRecord_Relation, Integer]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def id_before_last_save: () -> Integer?
  def id_change_to_be_saved: () -> Array[Integer?]?
  def id_in_database: () -> Integer?
  def saved_change_to_id: () -> Array[Integer?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor sponsor_id(): Integer
  def sponsor_id_changed?: () -> bool
  def sponsor_id_change: () -> [ Integer?, Integer? ]
  def sponsor_id_will_change!: () -> void
  def sponsor_id_was: () -> Integer?
  def sponsor_id_previously_changed?: () -> bool
  def sponsor_id_previous_change: () -> Array[Integer?]?
  def sponsor_id_previously_was: () -> Integer?
  def sponsor_id_before_last_save: () -> Integer?
  def sponsor_id_change_to_be_saved: () -> Array[Integer?]?
  def sponsor_id_in_database: () -> Integer?
  def saved_change_to_sponsor_id: () -> Array[Integer?]?
  def saved_change_to_sponsor_id?: () -> bool
  def will_save_change_to_sponsor_id?: () -> bool
  def restore_sponsor_id!: () -> void
  def clear_sponsor_id_change: () -> void

  attr_accessor type(): String?
  def type_changed?: () -> bool
  def type_change: () -> [ String?, String? ]
  def type_will_change!: () -> void
  def type_was: () -> String?
  def type_previously_changed?: () -> bool
  def type_previous_change: () -> Array[String?]?
  def type_previously_was: () -> String?
  def type_before_last_save: () -> String?
  def type_change_to_be_saved: () -> Array[String?]?
  def type_in_database: () -> String?
  def saved_change_to_type: () -> Array[String?]?
  def saved_change_to_type?: () -> bool
  def will_save_change_to_type?: () -> bool
  def restore_type!: () -> void
  def clear_type_change: () -> void

  attr_accessor title(): String?
  def title_changed?: () -> bool
  def title_change: () -> [ String?, String? ]
  def title_will_change!: () -> void
  def title_was: () -> String?
  def title_previously_changed?: () -> bool
  def title_previous_change: () -> Array[String?]?
  def title_previously_was: () -> String?
  def title_before_last_save: () -> String?
  def title_change_to_be_saved: () -> Array[String?]?
  def title_in_database: () -> String?
  def saved_change_to_title: () -> Array[String?]?
  def saved_change_to_title?: () -> bool
  def will_save_change_to_title?: () -> bool
  def restore_title!: () -> void
  def clear_title_change: () -> void

  attr_accessor url(): String?
  def url_changed?: () -> bool
  def url_change: () -> [ String?, String? ]
  def url_will_change!: () -> void
  def url_was: () -> String?
  def url_previously_changed?: () -> bool
  def url_previous_change: () -> Array[String?]?
  def url_previously_was: () -> String?
  def url_before_last_save: () -> String?
  def url_change_to_be_saved: () -> Array[String?]?
  def url_in_database: () -> String?
  def saved_change_to_url: () -> Array[String?]?
  def saved_change_to_url?: () -> bool
  def will_save_change_to_url?: () -> bool
  def restore_url!: () -> void
  def clear_url_change: () -> void

  attr_accessor text(): String?
  def text_changed?: () -> bool
  def text_change: () -> [ String?, String? ]
  def text_will_change!: () -> void
  def text_was: () -> String?
  def text_previously_changed?: () -> bool
  def text_previous_change: () -> Array[String?]?
  def text_previously_was: () -> String?
  def text_before_last_save: () -> String?
  def text_change_to_be_saved: () -> Array[String?]?
  def text_in_database: () -> String?
  def saved_change_to_text: () -> Array[String?]?
  def saved_change_to_text?: () -> bool
  def will_save_change_to_text?: () -> bool
  def restore_text!: () -> void
  def clear_text_change: () -> void

  attr_accessor link(): String?
  def link_changed?: () -> bool
  def link_change: () -> [ String?, String? ]
  def link_will_change!: () -> void
  def link_was: () -> String?
  def link_previously_changed?: () -> bool
  def link_previous_change: () -> Array[String?]?
  def link_previously_was: () -> String?
  def link_before_last_save: () -> String?
  def link_change_to_be_saved: () -> Array[String?]?
  def link_in_database: () -> String?
  def saved_change_to_link: () -> Array[String?]?
  def saved_change_to_link?: () -> bool
  def will_save_change_to_link?: () -> bool
  def restore_link!: () -> void
  def clear_link_change: () -> void

  attr_accessor public(): bool?
  def public_changed?: () -> bool
  def public_change: () -> [ bool?, bool? ]
  def public_will_change!: () -> void
  def public_was: () -> bool?
  def public_previously_changed?: () -> bool
  def public_previous_change: () -> Array[bool?]?
  def public_previously_was: () -> bool?
  def public_before_last_save: () -> bool?
  def public_change_to_be_saved: () -> Array[bool?]?
  def public_in_database: () -> bool?
  def saved_change_to_public: () -> Array[bool?]?
  def saved_change_to_public?: () -> bool
  def will_save_change_to_public?: () -> bool
  def restore_public!: () -> void
  def clear_public_change: () -> void
  attr_accessor public?(): bool

  attr_accessor file_data(): String?
  def file_data_changed?: () -> bool
  def file_data_change: () -> [ String?, String? ]
  def file_data_will_change!: () -> void
  def file_data_was: () -> String?
  def file_data_previously_changed?: () -> bool
  def file_data_previous_change: () -> Array[String?]?
  def file_data_previously_was: () -> String?
  def file_data_before_last_save: () -> String?
  def file_data_change_to_be_saved: () -> Array[String?]?
  def file_data_in_database: () -> String?
  def saved_change_to_file_data: () -> Array[String?]?
  def saved_change_to_file_data?: () -> bool
  def will_save_change_to_file_data?: () -> bool
  def restore_file_data!: () -> void
  def clear_file_data_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  def sponsor: () -> Sponsor
  def sponsor=: (Sponsor?) -> Sponsor?
  def reload_sponsor: () -> Sponsor?
  def build_sponsor: (untyped) -> Sponsor
  def create_sponsor: (untyped) -> Sponsor
  def create_sponsor!: (untyped) -> Sponsor

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[SponsorAttachmentKeyImage, Integer]
    include Enumerable[SponsorAttachmentKeyImage]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[SponsorAttachmentKeyImage, Integer]
  end
end
