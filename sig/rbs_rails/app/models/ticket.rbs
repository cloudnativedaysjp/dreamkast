class Ticket < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Ticket, ActiveRecord_Relation, String]

  module GeneratedAttributeMethods
    def id: () -> String

    def id=: (String) -> String

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ String?, String? ]

    def id_will_change!: () -> void

    def id_was: () -> String?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[String?]?

    def id_previously_was: () -> String?

    def id_before_last_save: () -> String?

    def id_change_to_be_saved: () -> Array[String?]?

    def id_in_database: () -> String?

    def saved_change_to_id: () -> Array[String?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def conference_id: () -> Integer

    def conference_id=: (Integer) -> Integer

    def conference_id?: () -> bool

    def conference_id_changed?: () -> bool

    def conference_id_change: () -> [ Integer?, Integer? ]

    def conference_id_will_change!: () -> void

    def conference_id_was: () -> Integer?

    def conference_id_previously_changed?: () -> bool

    def conference_id_previous_change: () -> Array[Integer?]?

    def conference_id_previously_was: () -> Integer?

    def conference_id_before_last_save: () -> Integer?

    def conference_id_change_to_be_saved: () -> Array[Integer?]?

    def conference_id_in_database: () -> Integer?

    def saved_change_to_conference_id: () -> Array[Integer?]?

    def saved_change_to_conference_id?: () -> bool

    def will_save_change_to_conference_id?: () -> bool

    def restore_conference_id!: () -> void

    def clear_conference_id_change: () -> void

    def title: () -> String

    def title=: (String) -> String

    def title?: () -> bool

    def title_changed?: () -> bool

    def title_change: () -> [ String?, String? ]

    def title_will_change!: () -> void

    def title_was: () -> String?

    def title_previously_changed?: () -> bool

    def title_previous_change: () -> Array[String?]?

    def title_previously_was: () -> String?

    def title_before_last_save: () -> String?

    def title_change_to_be_saved: () -> Array[String?]?

    def title_in_database: () -> String?

    def saved_change_to_title: () -> Array[String?]?

    def saved_change_to_title?: () -> bool

    def will_save_change_to_title?: () -> bool

    def restore_title!: () -> void

    def clear_title_change: () -> void

    def description: () -> String

    def description=: (String) -> String

    def description?: () -> bool

    def description_changed?: () -> bool

    def description_change: () -> [ String?, String? ]

    def description_will_change!: () -> void

    def description_was: () -> String?

    def description_previously_changed?: () -> bool

    def description_previous_change: () -> Array[String?]?

    def description_previously_was: () -> String?

    def description_before_last_save: () -> String?

    def description_change_to_be_saved: () -> Array[String?]?

    def description_in_database: () -> String?

    def saved_change_to_description: () -> Array[String?]?

    def saved_change_to_description?: () -> bool

    def will_save_change_to_description?: () -> bool

    def restore_description!: () -> void

    def clear_description_change: () -> void

    def price: () -> Integer

    def price=: (Integer) -> Integer

    def price?: () -> bool

    def price_changed?: () -> bool

    def price_change: () -> [ Integer?, Integer? ]

    def price_will_change!: () -> void

    def price_was: () -> Integer?

    def price_previously_changed?: () -> bool

    def price_previous_change: () -> Array[Integer?]?

    def price_previously_was: () -> Integer?

    def price_before_last_save: () -> Integer?

    def price_change_to_be_saved: () -> Array[Integer?]?

    def price_in_database: () -> Integer?

    def saved_change_to_price: () -> Array[Integer?]?

    def saved_change_to_price?: () -> bool

    def will_save_change_to_price?: () -> bool

    def restore_price!: () -> void

    def clear_price_change: () -> void

    def stock: () -> Integer

    def stock=: (Integer) -> Integer

    def stock?: () -> bool

    def stock_changed?: () -> bool

    def stock_change: () -> [ Integer?, Integer? ]

    def stock_will_change!: () -> void

    def stock_was: () -> Integer?

    def stock_previously_changed?: () -> bool

    def stock_previous_change: () -> Array[Integer?]?

    def stock_previously_was: () -> Integer?

    def stock_before_last_save: () -> Integer?

    def stock_change_to_be_saved: () -> Array[Integer?]?

    def stock_in_database: () -> Integer?

    def saved_change_to_stock: () -> Array[Integer?]?

    def saved_change_to_stock?: () -> bool

    def will_save_change_to_stock?: () -> bool

    def restore_stock!: () -> void

    def clear_stock_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def orders_tickets: () -> OrdersTicket::ActiveRecord_Associations_CollectionProxy
  def orders_tickets=: (OrdersTicket::ActiveRecord_Associations_CollectionProxy | Array[OrdersTicket]) -> (OrdersTicket::ActiveRecord_Associations_CollectionProxy | Array[OrdersTicket])
  def orders_ticket_ids: () -> Array[Integer]
  def orders_ticket_ids=: (Array[Integer]) -> Array[Integer]
  def orders: () -> Order::ActiveRecord_Associations_CollectionProxy
  def orders=: (Order::ActiveRecord_Associations_CollectionProxy | Array[Order]) -> (Order::ActiveRecord_Associations_CollectionProxy | Array[Order])
  def order_ids: () -> Array[Integer]
  def order_ids=: (Array[Integer]) -> Array[Integer]
  def check_ins: () -> CheckIn::ActiveRecord_Associations_CollectionProxy
  def check_ins=: (CheckIn::ActiveRecord_Associations_CollectionProxy | Array[CheckIn]) -> (CheckIn::ActiveRecord_Associations_CollectionProxy | Array[CheckIn])
  def check_in_ids: () -> Array[Integer]
  def check_in_ids=: (Array[Integer]) -> Array[Integer]

  def conference: () -> Conference
  def conference=: (Conference?) -> Conference?
  def reload_conference: () -> Conference?
  def build_conference: (untyped) -> Conference
  def create_conference: (untyped) -> Conference
  def create_conference!: (untyped) -> Conference
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Ticket, String]
    include Enumerable[Ticket]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Ticket, String]
  end
end
